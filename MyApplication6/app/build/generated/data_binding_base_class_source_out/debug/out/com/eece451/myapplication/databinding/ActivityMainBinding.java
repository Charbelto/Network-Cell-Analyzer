// Generated by view binder compiler. Do not edit!
package com.eece451.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cardiomood.android.controls.gauge.SpeedometerGauge;
import com.eece451.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button;

  @NonNull
  public final TextView cellID;

  @NonNull
  public final TextView cellIDStaticText;

  @NonNull
  public final TextView frequencyBand;

  @NonNull
  public final TextView frequencyBandStaticText;

  @NonNull
  public final TextView networkType;

  @NonNull
  public final TextView networktypeStaticText;

  @NonNull
  public final TextView operatorName;

  @NonNull
  public final TextView operatorStaticText;

  @NonNull
  public final TextView signalStrength;

  @NonNull
  public final TextView signalstrengthStaticText;

  @NonNull
  public final TextView snr;

  @NonNull
  public final TextView snrStaticText;

  @NonNull
  public final SpeedometerGauge speedometer;

  @NonNull
  public final TextView timeStampStaticText;

  @NonNull
  public final TextView timestamp;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button button,
      @NonNull TextView cellID, @NonNull TextView cellIDStaticText, @NonNull TextView frequencyBand,
      @NonNull TextView frequencyBandStaticText, @NonNull TextView networkType,
      @NonNull TextView networktypeStaticText, @NonNull TextView operatorName,
      @NonNull TextView operatorStaticText, @NonNull TextView signalStrength,
      @NonNull TextView signalstrengthStaticText, @NonNull TextView snr,
      @NonNull TextView snrStaticText, @NonNull SpeedometerGauge speedometer,
      @NonNull TextView timeStampStaticText, @NonNull TextView timestamp) {
    this.rootView = rootView;
    this.button = button;
    this.cellID = cellID;
    this.cellIDStaticText = cellIDStaticText;
    this.frequencyBand = frequencyBand;
    this.frequencyBandStaticText = frequencyBandStaticText;
    this.networkType = networkType;
    this.networktypeStaticText = networktypeStaticText;
    this.operatorName = operatorName;
    this.operatorStaticText = operatorStaticText;
    this.signalStrength = signalStrength;
    this.signalstrengthStaticText = signalstrengthStaticText;
    this.snr = snr;
    this.snrStaticText = snrStaticText;
    this.speedometer = speedometer;
    this.timeStampStaticText = timeStampStaticText;
    this.timestamp = timestamp;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.cellID;
      TextView cellID = ViewBindings.findChildViewById(rootView, id);
      if (cellID == null) {
        break missingId;
      }

      id = R.id.cellIDStaticText;
      TextView cellIDStaticText = ViewBindings.findChildViewById(rootView, id);
      if (cellIDStaticText == null) {
        break missingId;
      }

      id = R.id.frequencyBand;
      TextView frequencyBand = ViewBindings.findChildViewById(rootView, id);
      if (frequencyBand == null) {
        break missingId;
      }

      id = R.id.frequencyBandStaticText;
      TextView frequencyBandStaticText = ViewBindings.findChildViewById(rootView, id);
      if (frequencyBandStaticText == null) {
        break missingId;
      }

      id = R.id.networkType;
      TextView networkType = ViewBindings.findChildViewById(rootView, id);
      if (networkType == null) {
        break missingId;
      }

      id = R.id.networktypeStaticText;
      TextView networktypeStaticText = ViewBindings.findChildViewById(rootView, id);
      if (networktypeStaticText == null) {
        break missingId;
      }

      id = R.id.operatorName;
      TextView operatorName = ViewBindings.findChildViewById(rootView, id);
      if (operatorName == null) {
        break missingId;
      }

      id = R.id.operatorStaticText;
      TextView operatorStaticText = ViewBindings.findChildViewById(rootView, id);
      if (operatorStaticText == null) {
        break missingId;
      }

      id = R.id.signalStrength;
      TextView signalStrength = ViewBindings.findChildViewById(rootView, id);
      if (signalStrength == null) {
        break missingId;
      }

      id = R.id.signalstrengthStaticText;
      TextView signalstrengthStaticText = ViewBindings.findChildViewById(rootView, id);
      if (signalstrengthStaticText == null) {
        break missingId;
      }

      id = R.id.snr;
      TextView snr = ViewBindings.findChildViewById(rootView, id);
      if (snr == null) {
        break missingId;
      }

      id = R.id.snrStaticText;
      TextView snrStaticText = ViewBindings.findChildViewById(rootView, id);
      if (snrStaticText == null) {
        break missingId;
      }

      id = R.id.speedometer;
      SpeedometerGauge speedometer = ViewBindings.findChildViewById(rootView, id);
      if (speedometer == null) {
        break missingId;
      }

      id = R.id.timeStampStaticText;
      TextView timeStampStaticText = ViewBindings.findChildViewById(rootView, id);
      if (timeStampStaticText == null) {
        break missingId;
      }

      id = R.id.timestamp;
      TextView timestamp = ViewBindings.findChildViewById(rootView, id);
      if (timestamp == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, button, cellID, cellIDStaticText,
          frequencyBand, frequencyBandStaticText, networkType, networktypeStaticText, operatorName,
          operatorStaticText, signalStrength, signalstrengthStaticText, snr, snrStaticText,
          speedometer, timeStampStaticText, timestamp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
